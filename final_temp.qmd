---
title: "Widener Giving Project"
editor: visual
auhtor: BG
format: html
embed-resources: true
code-fold: True
warning: False
---

## 1. Research Question

What are possible areas of interest that Widener University can target in order to grow their annual giving base? Currently, Widener University's department of Development does not have an analytics team. I hope to be able to discover some demographic trends about how much, to what fund, when, and why people are donating to Widener, and help Widener retain more of these donors by identifying strengths and weaknesses of their current campaign in comparison to the previous campaign.

## 2. Data

The data I am using I obtained directly from the Director of Advancement Services at Widener University. The level of analysis is individual gifts. Essentially, the data I received documents every financial gift given to Widener from 2013 through February 2023. There are 57,562 rows.

## 3. Variables of Interest

My main outcome variable is going to be the dollar amount of gifts. This can be the sum, average or median of groups of donors or years. I will also be looking at the number (count) of gifts given as an outcome variable, and sometimes who gave them as well (I have a unique ID code for every donor in the dataset). These are the only continuous variables. The dependent variables I have chosen are a product of what information I think will have the most impact in describing their giving base, and what information I was allowed access to by Widener. They are mostly categorical variables. They are constituency(alum, friend, employee...), graduation year(if applicable), fund (e.g. football team), and gift date.

## 

```{r}
library(magrittr)
library(tidyverse)
library(stringr)
library(plotly)
library(scales)
library(gganimate)
library(gifski)
library(ggdist)
library(knitr)
```

```{r}
w <- read_csv("widener_clean.csv")

w = w %>% filter(gift_year != 2023)

dupes = duplicated(w$gift_id)

w = w[!dupes,]



w = w %>% 
  select(!(sc_mg_flag:gift_type))

w = w %>% 
  mutate(
    gift_range = case_when(
      gift_amount <= 50 ~ '$1-$50',
      gift_amount > 50 & gift_amount <= 200 ~ '$51-$200',
      gift_amount > 200 & gift_amount <= 1000 ~ '$201-$1000',
      gift_amount > 1000 & gift_amount <= 2500 ~ '$1001-$2500',
      gift_amount > 2500 &  gift_amount <= 5000 ~ '$2501-$5000',
      gift_amount > 5000 & gift_amount <= 25000 ~ '$5001-$25000',
      gift_amount > 25000 ~ '$25000+'
    )
  )

class_year = w %>% 
  group_by(gift_year, primary_class) %>% 
  summarize(gifts = n_distinct(gift_id),
            dollars = sum(gift_amount),
            avg = mean(gift_amount),
            median = median(gift_amount))
w_sub = w %>% 
  filter(gift_year == 2019|gift_year == 2020|gift_year == 2021| gift_year == 2022)


range_order = c('$1-$50','$51-$200','$201-$1000','$1001-$2500','$2501-$5000', '$5001-$25000', '$25000+')

all_year_table = w %>% 
  group_by(gift_year) %>% 
  summarize(gifts = n_distinct(gift_id),
            dollars = sum(gift_amount))

range_table = w %>% 
  group_by(gift_year, gift_range) %>% 
  summarize(n = n_distinct(gift_id),
            dollars = sum(gift_amount))

w_means <- w %>%
  group_by(gift_year, gift_range) %>%
  summarize(mean_gift_amount = mean(gift_amount))
```

```{r}
range_table = range_table %>%
  arrange(gift_year) %>% 
  group_by(gift_range) %>% 
  mutate(diff_n = n - lag(n, default = first(n[gift_year == first(gift_year)+1])),
         diff_n = ifelse(is.na(diff_n), NA, diff_n))

range_table = range_table %>% 
  arrange(gift_year) %>% 
  group_by(gift_range) %>% 
  mutate(diff_14 = n-n[gift_year == 2014])
  
```

```{r}
gift_13 = w %>% 
  filter(gift_year == 2013) %>% 
  select(constituent_id)

gift_14 = w %>% 
  filter(gift_year == 2014) %>% 
  select(constituent_id)

gift_15 = w %>% 
  filter(gift_year == 2015) %>% 
  select(constituent_id)

gift_16 = w %>% 
  filter(gift_year == 2016) %>% 
  select(constituent_id)

gift_17 = w %>% 
  filter(gift_year == 2017) %>% 
  select(constituent_id)

gift_18 = w %>% 
  filter(gift_year == 2018) %>% 
  select(constituent_id)

gift_19 = w %>% 
  filter(gift_year == 2019) %>% 
  select(constituent_id)

gift_20 = w %>% 
  filter(gift_year == 2020) %>% 
  select(constituent_id)

gift_21 = w %>% 
  filter(gift_year == 2021) %>% 
  select(constituent_id)

gift_22 = w %>% 
  filter(gift_year == 2022) %>% 
  select(constituent_id)

```

```{r}
w_donors = unique(w$constituent_id)

w_donors = tibble(w_donors)

w_donors = w_donors %>% 
  rename(donor_id = w_donors)
```

```{r}
w_donors = w_donors %>% 
  mutate(y2013 = ifelse(donor_id %in% gift_13$constituent_id,1,0))

w_donors = w_donors %>% 
  mutate(y2014 = ifelse(donor_id %in% gift_14$constituent_id,1,0))

w_donors = w_donors %>% 
  mutate(y2015 = ifelse(donor_id %in% gift_15$constituent_id,1,0))

w_donors = w_donors %>% 
  mutate(y2016 = ifelse(donor_id %in% gift_16$constituent_id,1,0))

w_donors = w_donors %>% 
  mutate(y2017 = ifelse(donor_id %in% gift_17$constituent_id,1,0))

w_donors = w_donors %>% 
  mutate(y2018 = ifelse(donor_id %in% gift_18$constituent_id,1,0))

w_donors = w_donors %>% 
  mutate(y2019 = ifelse(donor_id %in% gift_19$constituent_id,1,0))

w_donors = w_donors %>% 
  mutate(y2020 = ifelse(donor_id %in% gift_20$constituent_id,1,0))

w_donors = w_donors %>% 
  mutate(y2021 = ifelse(donor_id %in% gift_21$constituent_id,1,0))

w_donors = w_donors %>% 
  mutate(y2022 = ifelse(donor_id %in% gift_22$constituent_id,1,0))
```

```{r}
w_donors= w_donors %>% 
  group_by(donor_id) %>% 
  mutate(years_given = sum(y2013+y2014+y2015+y2016+y2017+y2018+y2019+y2020+y2021+y2022))
```

```{r}
pride = '#264F91'
lion = '#F6C34A'
```

## Descriptive Statistics

```{r}
ggplot(w %>% 
         filter(gift_year != 2023),
       aes(x = primary_class))+
  geom_histogram(bins = 100,
                 fill = pride)+
  labs(title = 'Distribution of gifts by Graduating Class',
          x = 'Grad Class',
          y = 'Number of gifts')+
  scale_x_continuous(breaks = c(1950, 1960, 1970, 1980, 1990, 2000, 2010, 2020))+
  scale_y_continuous(breaks = c())+
  theme(axis.text.x = element_text(size = 7))+
  theme_minimal()+
  theme(panel.grid.major = element_blank())
```

The distribution is unexpectedly a decent bell curve, skewed left, centered at about 1992. There are strong representations of graduating classes on either side of the center.

```{r}
ggplot(w %>% 
         filter(gift_year != 2023),
       aes(x = primary_class))+
  geom_histogram(bins = 100,
                 fill = pride)+
  facet_wrap(~gift_year, nrow = 2)+
  labs(title = 'Distribution of gifts by Graduating Class for Each Year',
          x = 'Grad Class',
          y = 'Count of gifts')+
  scale_x_continuous(breaks = c(1970, 1995, 2020))+
  theme(axis.text.x = element_text(size = 7))+
  theme_minimal()+
  theme(panel.grid.major = element_blank(),
        strip.text = element_text(size = 13))
```

The current campaign lacks the tremendous support of grad classes in the mid 90's that the previous campaign had. The current campaign shows a more uniform distribution in between grad classes. Note that the spike of the early-mid 90's grad classes disappears in 2019. I wonder what happened in 2020...

2019 is also interesting because it shows a tremendous spike in gifts from the grad class of 2019.

Next, I examine descriptive statistics for each year.

```{r}
ggplot(all_year_table,
       aes(x = gifts, y = rev(as.character(gift_year))))+
  geom_point(stat = 'identity', 
              size = 5,
              color = ifelse(all_year_table$gift_year == 2014,lion,pride))+
  geom_text(aes(label = gift_year),
            nudge_x = -300,
            size = 3)+
  labs(title = 'Number of Gifts by Year',
       x = 'Total Gifts',
       y = '')+
  theme_minimal()+
  theme(axis.line.y = element_blank(),
        axis.text.y = element_blank(),
        panel.grid.major.y = element_blank())+
  scale_x_continuous(breaks = c(0,1000,2000,3000,4000,5000),
                     limits = c(0,6000))
```

2014 has the most gifts.

```{r}
giv = ggplot(all_year_table,
       aes(x = dollars, y = rev(as.character(gift_year))))+
  geom_point(stat = 'identity', 
              size = 5,
              color = ifelse(all_year_table$gift_year == 2016,lion,pride))+
  geom_text(aes(label = gift_year),
            nudge_x = -300000,
            size = 3)+
  labs(title = 'Year over year Performance',
       x = 'Total Revenue',
       y = '')+
  theme_minimal()+
  theme(axis.line.y = element_blank(),
        axis.text.y = element_blank(),
        panel.grid.major.y = element_blank())+
  scale_x_continuous(labels = scales::dollar_format(),
                     limits = c(0,6000000),
                     breaks = c(0,1000000,2000000,3000000,4000000,5000000,6000000))
giv
```

2016 brought in the most money.

```{r}
all_year_table2 = w %>% 
  group_by(gift_year, primary_constituency) %>% 
  summarize(gifts = n_distinct(gift_id),
            dollars = sum(gift_amount))

all_alum = all_year_table2 %>% 
  filter(primary_constituency == 'Alumna/us')

alum = ggplot(all_alum,
       aes(x = dollars, y = rev(as.character(gift_year))))+
  geom_point(stat = 'identity', 
              size = 5,
              color = ifelse(all_alum$gift_year == 2020,lion,pride))+
  geom_text(aes(label = gift_year),
            nudge_x = -100000,
            size = 3)+
  labs(title = 'Year over year Performance of Alumni Donations',
       x = 'Total Revenue',
       y = '')+
  theme_minimal()+
  theme(axis.line.y = element_blank(),
        axis.text.y = element_blank(),
        panel.grid.major.y = element_blank())+
  scale_x_continuous(labels = scales::dollar_format(),
                     limits = c(0,1500000),
                     breaks = c(0,500000, 1000000, 1500000))

alum
```

While 2016 has the most overall money, it is second to 2020 in terms of Alumni donations. However, the following years were not able to match 2020 in alumni giving.

## Observations and Next Steps

The previous campaign beginning in 2013 is comparable to the current campaign that began in 2019. One thing to note is that the previous campaign produced both the year with the most gifts and the year of greatest giving. However, the previous campaign is marked by a relatively high amount of variability in overall giving compared to the current campaign, which is very consistent. To proceed, I want to find out what the difference is between the two campaigns that led to 2014 and 2016 being the highest achieving years in total gifts and overall giving respectively.

To begin examining the difference between the two campaigns, I will start by breaking the gifts into groups by gift amount.

```{r}
ggplot(range_table %>% 
         filter(gift_year == 2016|
                  gift_year == 2019|
                  gift_year == 2014|
                  gift_year == 2020|
                  gift_year == 2021|
                  gift_year == 2022), 
       aes(y = n, x = factor(gift_range, range_order),
           fill = gift_range)) +
  geom_bar(stat = 'identity')+
  geom_text(aes(label = ifelse(gift_range == "$1-$50", n, "")),
            hjust = 1.3)+
  geom_text(aes(label = ifelse(gift_range == "$51-$200", n, "")),
            hjust = 1.1,
            size = 4, color = 'white')+
  coord_flip() +
  labs(x = "Range", y = "Number of Gifts",
       title  = 'Vast Majority of Gifts are $200 or less')+
  scale_fill_manual(values = c(lion, pride, pride, pride, pride ,pride, pride))+
  facet_wrap(~gift_year, nrow = 2)+
  theme_minimal()+
  guides(fill = FALSE)+
  theme(panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        axis.line = element_blank(),
        axis.text.x = element_blank(),
        axis.text.y = element_text(size = 10),
        strip.text = element_text(size = 13))
```

Most gifts in both campaigns are \$200 or below. Further examining trends in this gift range may reveal a valuable difference between the two campaigns. I will examine the \$50 and below range since \$51-200 range appears relatively stable, although there is small growth of this range in 2022. Almost all gifts in range \$51-\$200 are \$100 gifts so median is stable.

## Trends in Smaller Gift Amounts in Both Campaigns

```{r}
ggplot(w %>% 
         filter(gift_range == '$1-$50',
                gift_year == 2016|
                  gift_year == 2019|
                  gift_year == 2014|
                  gift_year == 2020|
                  gift_year == 2021|
                  gift_year == 2022),
       aes(x = factor(gift_year), y = gift_amount, fill = factor(gift_year)))+
  stat_halfeye(
    adjust = 0.5,
    justification = -0.2,
    .width = 0,
    point_colour = NA
  ) +
  geom_boxplot(
    width = 0.18,
    outlier.color = NA,
    alpha = 0.5
  )+
  geom_point(data = w_means %>% 
               filter(gift_range == '$1-$50',
                gift_year == 2016|
                  gift_year == 2019|
                  gift_year == 2014|
                  gift_year == 2020|
                  gift_year == 2021|
                  gift_year == 2022), aes(x = factor(gift_year), y = mean_gift_amount),
             color = lion,
             shape = 19,
             show.legend = TRUE)+
  labs(title = 'Increase in Mean and Median Gift Amount',
       subtitle = 'Exclusively Small Gifts ($1-$50)',
       y = '',
       x = '')+
  theme_minimal()+
  guides(fill = FALSE,
         shape = FALSE,
         size = FALSE,
         color = guide_legend(title = "Mean Gift Amount"))+
  scale_y_continuous(labels = dollar_format())+
  scale_fill_brewer(palette = "Blues")+
  theme(legend.key.size = unit(1, "cm"),
        legend.text = element_text(size = 12),
        legend.title = element_text(size = 14))
```

Since 2014, the mean gift size of small gifts increased by nearly \$5. The median also increased by \$5. In the future I could look deeper into the retention and reactivation of donors in this range, and see which donors are responsible for this increase.

## Count of Gifts Compared to 2014

```{r}
comp = ggplot(range_table %>% 
         filter(
          gift_year == 2017|
           gift_year == 2016|
             gift_year == 2019|
                  gift_year == 2020|
                  gift_year == 2021|
                  gift_year == 2022), 
       aes(y = diff_14, x = factor(gift_range, range_order))) +
  geom_bar(stat = 'identity', position = position_dodge(width = NULL),
           fill = pride,
           width = 0.8) +
  coord_flip() +
  scale_y_continuous(limits = c(-max(abs(range_table$diff_14)), max(abs(range_table$diff_14))),
                     breaks = c(-500, 0, 500)) +
  labs(x = "Gift Amount", y = "Number of Gifts Compared to 2014",
       title  = 'Old Campaign Dominates in Number of Small Gifts')+
  facet_wrap(~gift_year, nrow = 2)+
  theme_minimal()+
  theme(panel.grid.major.y = element_blank(),
        panel.grid.minor.x = element_blank(),
        axis.text.y = element_text(size = 10),
        strip.text = element_text(size = 13))

comp
```

2022 is the first and only year that has more gifts than 2014 in some lower ranges. A pipeline is being established.

Widener has had success in increasing the mean gift amount of gifts under \$50. The mean increase is real, and not simply a product of the shrinking number of gifts. For example, in 2022, more small gifts were received than in 2016, and the mean is also higher. Yet, 2016 actually pulled in more money than any other year. Let's take another look, this time at the total amount of money coming from each gift range.

```{r}
ggplot(range_table %>% 
         filter(gift_year == 2016|
                  gift_year == 2019|
                  gift_year == 2014|
                  gift_year == 2020|
                  gift_year == 2021|
                  gift_year == 2022), 
       aes(y = dollars, x = factor(gift_range, range_order),
           fill = gift_range)) +
  geom_bar(stat = 'identity')+
  coord_flip() +
  scale_y_continuous(labels = scales::label_dollar(scale = 0.000001, suffix = 'm'),
                     breaks = c(1000000,2000000))+
  labs(x = "", y = "$$$",
       title  = 'Larger Gifts Dominate')+
  scale_fill_manual(values = c(pride, pride, pride, lion, pride, pride, pride))+
  facet_wrap(~gift_year, nrow = 2)+
  theme_minimal()+
  guides(fill = FALSE)+
  theme(panel.grid.major.y = element_blank(),
        axis.text.y = element_text(size = 10),
        strip.text = element_text(size = 13))
```

Compared to the larger gift ranges, small gifts are insignificant to the total amount of money brought in each year. It is clear the previous campaign, represented by 2014 and 2016, have much more money coming from in the \$25000 and up range. 2016 has an extremely high amount of money coming from this upper range.

```{r}
ggplot(range_table %>% 
         filter(gift_range == '$25000+',
                gift_year == 2016|
                  gift_year == 2019|
                  gift_year == 2014|
                  gift_year == 2020|
                  gift_year == 2021|
                  gift_year == 2022),
       aes(x = dollars, y = rev(as.character(gift_year))))+
  geom_point(stat = 'identity', 
              size = 5,
             aes(color = ifelse(gift_year == 2016, lion, pride)))+
  geom_text(aes(label = gift_year),
            nudge_x = -100000,
            size = 3)+
  labs(title = 'Total $$$ from Gifts of $25000 and Up',
       x = '',
       y = '')+
  theme_minimal()+
  scale_color_manual(values = c(pride, lion))+
  theme(axis.line.y = element_blank(),
        axis.text.y = element_blank(),
        panel.grid.major.y = element_blank())+
  guides(color = FALSE)+
  scale_x_continuous(labels = scales::dollar_format())
```

2016 has the most money from the \$25000+ range by far, so it makes sense it generated far more than other years.

### Who is donating these large gifts?

What funds are they contributing to? How many large donors from the old campaign are still giving today? Are they upgraded or downgraded? Who stopped giving?

Begin by establishing all donors that have given a gift of \$25000+

```{r}
large = w %>% 
  filter(gift_range == '$25000+') %>% 
  select(constituent_id,primary_constituency,primary_class,primary_degree,preferred_city,preferred_state,gift_amount, fund_description, fund_category, gift_id, gift_year)
```

```{r}
freq_table = table(large$constituent_id)

single_gift_n = sum(freq_table == 1)
twice_gift_n = sum(freq_table == 2)
multiple_gift_n = sum(freq_table >= 3)

cat("Once:", single_gift_n, "\n")
cat("Twice:", twice_gift_n, "\n")
cat("3 or more times:", multiple_gift_n, "\n")
cat("Total:",single_gift_n+twice_gift_n+multiple_gift_n)
```

So, only 47 people/businesses or foundations have ever given \$25000+

Who are they?

```{r}
large_donor_history = w_donors %>% 
  filter(donor_id %in% large$constituent_id)

large = left_join(large,w_donors[, c('donor_id', 'years_given')], by = join_by(constituent_id == donor_id))
```

```{r}
large %>% 
  group_by(primary_constituency) %>% 
  summarize(count = n()) %>% 
  ggplot(
       aes(y = reorder(primary_constituency, (count)), x = count))+
  geom_point(color = pride,
             size = 6,
             shape = 19)+
  labs(
       y = 'Primary Constituency',
       title = 'Who is Giving Large Gifts',
       x = 'Number of Gifts Recieved')+
  theme(axis.text.y = element_text(size = 12))+
  theme_minimal()+
  theme(panel.grid.major.y = element_blank())

```

What are they giving to?

```{r}
large %>% 
  group_by(fund_category) %>% 
  summarize(count = n()) %>% 
  ggplot(aes(y = reorder(fund_category, (count)), x = count))+
  geom_point(color = lion,
             size = 6,
             shape = 19)+
  labs(x = '',
       y = '',
       title = 'Breakdown of Large Gifts by Fund')+
  theme(axis.text.y = element_text(size = 12))+
  theme_minimal()+
  theme(panel.grid.major.y = element_blank())
  
```

```{r}
large %>% 
  filter(fund_category == 'Current - Other Restricted') %>% 
  group_by(fund_description) %>% 
  summarize(count = n()) %>% 
  ggplot(aes(y = reorder(fund_description, (count)), x = count))+
  geom_point(color = lion,
             size = 4,
             shape = 19)+
  labs(x = '',
       y = '',
       title  = 'Breakdown of Gifts to Other Restricted Funds')+
  theme(axis.text.y = element_text(size = 12))+
  theme_minimal()+
  scale_x_continuous(breaks = c(1, 5, 10, 15))+
  theme(panel.grid.major.y = element_blank())
```

### What large donors no longer give?

```{r}
lapsed = large_donor_history %>% 
  filter(sum(y2013+y2014+y2015+y2016+y2017+y2018)>=1&
               sum(y2019+y2020+y2021+y2022) == 0)

cat("Large Donors Lapsed from Previous Campaign", "\n")
cat("Gave One Year:", nrow(lapsed %>% 
                           filter(sum(y2013+y2014+y2015+y2016+y2017+y2018)==1)), "\n")
cat("Gave Two Years:", nrow(lapsed %>% 
                           filter(sum(y2013+y2014+y2015+y2016+y2017+y2018)==2)), "\n")
cat("Gave 3 or more Years:", nrow(lapsed %>% 
                           filter(sum(y2013+y2014+y2015+y2016+y2017+y2018)>=3)), "\n")
cat("Total:",nrow(lapsed))
```

```{r}
w_lapsed = large %>% 
  filter(constituent_id %in% lapsed$donor_id)

```

```{r}
w_lapsed %>% 
  group_by(constituent_id) %>% 
  group_by(primary_constituency) %>% 
  summarize(count = n()) %>% 
  ggplot(
       aes(y = reorder(primary_constituency, (count)), x = count))+
  geom_point(color = pride,
             size = 6,
             shape = 19)+
  labs(x = 'Unique Donors',
       y = 'Primary Constituency',
       title = 'Lapsed Large Donors')+
  theme(axis.text.y = element_text(size = 12))+
  theme_minimal()+
  theme(panel.grid.major.y = element_blank())
```

Most lapsed donors are not alumni, but there are some.

```{r}
w_lapsed %>% group_by(constituent_id) %>% 
  summarize(total_money = sum(gift_amount),
            class = primary_class,
            years_given = years_given,
            primary_degree) %>% 
  ggplot(aes(x = class, y = total_money, color = primary_degree))+
  geom_point(alpha = 0.5,
             size = 4)+
  scale_y_continuous(limits = c(0,250000),
                     labels = dollar_format())+
  theme_minimal()+
  labs(title = 'Lapsed Alumni Large Donors',
       color = 'Degree',
       y = 'Total Money Given',
       x = 'Graduating Class')
```

### What does retention look like?

```{r}
retention_rates = matrix(NA, nrow = 10, ncol = 10)
for (y1 in 1:10) {
  for (y2 in 1:10) {
    if (y2 <= y1) {
      retention_rates[y1, y2] = NA
    } else {
      ids_y1 = unique(w[w$gift_year == (y1+2012), ]$constituent_id)
      ids_y2 = unique(w[w$gift_year == (y2+2012), ]$constituent_id)
      intersection = intersect(ids_y1, ids_y2)
      retention_rates[y1, y2] = length(intersect(ids_y1, ids_y2)) / length(ids_y1)
    }
  }
}


```

```{r}

year_labels = c(2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022)
retention_df = data.frame(year1 = rep(year_labels, 10),
                           year2 = rep(year_labels, each = 10),
                           retention = as.vector(retention_rates))
retention_df = retention_df[!is.na(retention_df$retention),]




gift_retention_table = pivot_wider(retention_df, names_from = "year2", values_from = "retention")



```

```{r}
gift_retention_table = gift_retention_table %>% 
  pivot_longer(!year1, names_to = 'year2', values_to = 'retention')

gift_retention_table = gift_retention_table %>% 
  filter(!is.na(retention))

gift_retention_table$year2 = as.numeric(gift_retention_table$year2)

main_retention = gift_retention_table %>% 
  filter(year2 == year1+1)
```

```{r}
ggplot(main_retention,
       aes(x = year2, y = retention))+
  geom_col(fill = pride,
           width = 0.2)+
  labs(title = 'Retention of Donors from Previous Year',
       x = '',
       subtitle = '',
       y = '')+
  theme_minimal()+
  scale_x_continuous(breaks = c(2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022))+
  scale_y_continuous(breaks = c(0.1, 0.2, 0.3, 0.4, 0.5),
                     labels = percent_format())+
  theme(panel.grid.minor = element_blank(),
        panel.grid.major.x = element_blank())
```

Retention rates hover around 50%

```{r}
ggplot(gift_retention_table %>% 
         filter(year2 == 2022),
       aes(x = year1, y = retention))+
  geom_col(fill = pride,
           width = 0.2)+
  labs(title = 'Retention/Reactivation of Donors in 2022',
       x = '',
       subtitle = 'Each Bar Reflects the Percent of Donors from that Year that also Donated in 2022')+
  scale_x_continuous(breaks = c(2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021))+
  theme_minimal()+
  scale_y_continuous(breaks = c(0.1, 0.2, 0.3, 0.4, 0.5))+
  theme(panel.grid.minor = element_blank(),
        panel.grid.major.x = element_blank())
```

Moving on from lapsed large donors, I will examine gift movement. It will likely be most useful to do this for individual gift ranges so as to see small changes.

```{r}
w_joined = left_join(w, w_donors, by = join_by("constituent_id" == "donor_id"))
w_calc = w_joined %>% filter(gift_year != 2022)
```

```{r}
most_recent_gift = aggregate(w_calc$gift_year, by = list(w_calc$constituent_id), max)
colnames(most_recent_gift) = c("constituent_id", "most_recent_gift_year_not_2022")

```

```{r}
w_joined = left_join(w_joined, most_recent_gift, by = "constituent_id")
```

```{r}
most_recent_gift_amount = w_calc %>%
  group_by(constituent_id) %>%
  summarize(most_recent_gift_amount = ifelse(sum(gift_year == max(gift_year)) == 1, sum(ifelse(gift_year == max(gift_year), gift_amount, 0)), NA))

```

```{r}
w_joined = left_join(w_joined, most_recent_gift_amount, by = "constituent_id")
```

```{r}
w_joined$gift_movement_2022 <- ifelse(w_joined$gift_year != 2022, NA,
                                      ifelse(is.na(w_joined$most_recent_gift_year_not_2022), 0,
                                             w_joined$gift_amount - w_joined$most_recent_gift_amount))


```

I am only able to calculate gift movement for donors that donate no more than once a year, as it is unclear which gifts to compare otherwise.

Next I need to define giving status.

```{r}
w_joined$giving_status = NA

w_joined$giving_status[w_joined$years_given == 1 & w_joined$gift_year == 2022] = "New"
w_joined$giving_status[w_joined$years_given == 2 & w_joined$y2021 == 1 & w_joined$y2022 == 1] = "Second Year"
w_joined$giving_status[w_joined$years_given == 3 & w_joined$y2020 == 1 & w_joined$y2021 == 1 & w_joined$y2022 == 1] = "Third Year"

multi_year_donors = w_joined %>% 
  group_by(constituent_id) %>% 
  summarize(min_year = min(gift_year), max_year = max(gift_year), years_given = n_distinct(gift_year)) %>% 
  filter(max_year == 2022 & years_given > 3 & (max_year - min_year == years_given - 1)) %>% 
  select(constituent_id)

w_joined$giving_status[w_joined$constituent_id %in% multi_year_donors$constituent_id & w_joined$gift_year == 2022] = "Multi Year"

reactivated_donors = w_joined %>% 
  group_by(constituent_id) %>% 
  summarize(min_year = min(gift_year), max_year = max(gift_year), years_given = n_distinct(gift_year),
            y2021 = y2021) %>% 
  filter(max_year == 2022 & years_given > 1 & max_year - min_year != years_given - 1 & y2021 == 1) %>% 
  select(constituent_id)

newly_reac = w_joined %>% 
  group_by(constituent_id) %>% 
  filter(y2022 == 1 & years_given > 1 & y2021 == 0) %>% 
  select(constituent_id)

w_joined$giving_status[w_joined$constituent_id %in% reactivated_donors$constituent_id & w_joined$gift_year == 2022] = "2nd Year + Reactivated"

w_joined$giving_status[w_joined$constituent_id %in% newly_reac$constituent_id & w_joined$gift_year == 2022] = "1st Year Reactivated"


```

```{r}
status_table = w_joined %>% 
  filter(gift_year == 2022,
         primary_constituency == "Alumna/us",
         !is.na(gift_movement_2022)) %>% 
  group_by(giving_status) %>% 
  summarize(Count = n(),
            Increase = sum(ifelse(gift_movement_2022 > 0, 1, 0)),
            Decrease = sum(ifelse(gift_movement_2022 < 0, 1, 0)),
            no_change = sum(ifelse(gift_movement_2022 == 0, 1, 0)))

giving_kable = kable(status_table, format = 'html')
giving_kable
```

In 2022 309 donors were reactivated.

Due to the scale of ranges and movement, an interactive plot may be best suited for this data.

```{r}
move <- ggplot(w_joined %>% 
         filter(gift_year == 2022),
       aes(x = gift_amount, y = gift_movement_2022, color = giving_status, 
           text = paste0("Gift Amount: ", gift_amount, "<br>",
                 "Gift Movement: ", gift_movement_2022, "<br>",
                 "Giving Status: ", giving_status))) +
  geom_jitter() +
  theme_minimal() +
  scale_x_continuous() +
  scale_y_continuous() +
  labs(color = 'Status',
       x = 'Gift Amount',
       y = 'Gift Movement from Most Recent Previous Gift',
       title = 'Overall Gift Movement in 2022')


move$text <- paste0("Gift Amount: ", w_joined$gift_amount, "<br>",
                 "Gift Movement: ", w_joined$gift_movement_2022, "<br>",
                 "Giving Status: ", w_joined$giving_status)

ggplotly(move, tooltip = c('text'))

```

```{r}
simple_move = ggplot(status_table, aes(y = reorder(giving_status, Count))) +
  geom_col(aes(x = (no_change+Decrease+Increase), fill = "Increase")) +
  geom_col(aes(x = (no_change+Decrease), fill = "No Change")) +
  geom_col(aes(x = Decrease, fill = "Decrease")) +
  scale_fill_manual(values = c("No Change" = "gray70", "Decrease" = lion, "Increase" = pride)) +
  labs(x = "Count", y = NULL, fill = NULL,
       title = 'Gift Movement in 2022') +
  theme_classic()

simple_move
```

```{r}
status_range_table = w_joined %>% 
  filter(gift_year == 2022,
         primary_constituency == "Alumna/us",
         !is.na(gift_movement_2022)) %>% 
  group_by(giving_status, gift_range) %>% 
  summarize(Count = n(),
            Increase = sum(ifelse(gift_movement_2022 > 0, 1, 0)),
            Decrease = sum(ifelse(gift_movement_2022 < 0, 1, 0)),
            no_change = sum(ifelse(gift_movement_2022 == 0, 1, 0)))

ggplot(status_range_table %>% 
         filter(gift_range != '$25000+'&
                  gift_range != '$2501-$5000'&
                  gift_range != '$5001-$25000'), aes(y = reorder(giving_status, Count))) +
  geom_col(aes(x = (no_change+Decrease+Increase), fill = "Increase")) +
  geom_col(aes(x = (no_change+Decrease), fill = "No Change")) +
  geom_col(aes(x = Decrease, fill = "Decrease")) +
  scale_fill_manual(values = c("No Change" = "gray70", "Decrease" = lion, "Increase" = pride)) +
  labs(x = "Count", y = NULL, fill = NULL,
       title = 'Gift Movement in 2022 by Range') +
  facet_wrap(~factor(gift_range, range_order))+
  theme_minimal()+
  theme(panel.grid.major.y = element_blank())
```

When did the first year reactivated donors last give?

```{r}
w_joined = w_joined %>% 
  mutate(movement = case_when(
    gift_movement_2022 == 0 ~ 'No Change',
    gift_movement_2022 > 0 ~ 'Upgrade',
    gift_movement_2022 < 0 ~ 'Downgrade'
  ))

movement_order = c('Downgrade', 'No Change', 'Upgrade')

reac_movement = ggplot(w_joined %>% 
         filter(giving_status == '1st Year Reactivated',
                gift_year == 2022,
                !is.na(movement)),
       aes(x = most_recent_gift_year_not_2022, y = years_given, color = factor(movement, movement_order), size = gift_amount,
           text = paste0("Gift Amount = ", gift_amount)))+
  geom_jitter(alpha = 0.7)+
  scale_color_manual(values = c(lion, 'grey', pride))+
  theme_minimal()+
  scale_y_continuous(breaks = c(1,2,3,4,5,6,7,8,9))+
  scale_x_continuous(breaks = c(2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020))+
  labs(color = 'Change from Most Recent Previous Gift',
       title = '1st Year Reactivated Donors in 2022',
       y = 'Total Years with a Donation Made',
       x = 'Year of Most Recent Previous Gift',
       subtitle = 'Size Indicates Gift Amount')+
  guides(size = FALSE)



reac_movement$text = paste0("Gift Amount: ", w_joined$gift_amount)
reac_movement = ggplotly(reac_movement, tooltip = c('text'))
reac_movement
```

Finally, I will examine giving by grad class in 2022..

```{r}
grad_g = ggplot(class_year %>% 
         filter(!is.na(primary_class)) %>% 
           filter(gift_year == 2022),
       aes(x = primary_class, y = dollars, size = gifts,
    color = median))+
  geom_jitter(alpha = 0.7)+
  #scale_y_log10()+
  scale_y_continuous(labels = dollar_format(prefix = "$", big.mark = ","))+
  labs(y = 'Total $', x = 'Graduating Class',
       title = 'Alumni Giving in 2022: Large Size Indicates Large donor base',
       color = 'Median Gift')+
  geom_text(aes(x = 2016, y = 17000, label = 'Untapped Potential?', size = 25), color = lion)+
  theme_minimal()+
  theme(panel.background = element_rect(fill = "white"))

grad_g = ggplotly(grad_g)
grad_g
```

## Short Summary of Findings:

Previous campaign shows an increase in participation of mid 90s grad classes. Some years in the previous campaign also have spikes of gifts from the contemporary grad class.

The previous campaign is highly variable, although it produced the year with the most gifts and the year with the largest sum of money.

The mean gift size of small gifts \$50 and below is steadily rising, and so is the number of gifts in this range. 2022 marks a turning point for the new campaign, in which it begins to outclass the old campaign in number of gifts in a few smaller ranges.

Large gifts absolutely dominate the total amount of funding received, explaining why increases in smaller gift ranges do not result in large increases in total funding. However, seeing the increase in the small gift ranges in 2022 is hopeful for establishing a pipeline of donors that can be funneled upwards into giving larger gifts.

45 large gifts (\$25,000+) have been received from Alumni to date.

There 15 lapsed donors that have given large gifts in the past, 3 of which are Alumni.

2022 has a retention rate of just over 50%, better than most other years. 2014 was the year with the most gifts, and roughly 28% of those are retained in 2022.

2022 saw 427 new Alumni donate a gift, and 309 new reactivations. In the future, it will be beneficial to examine these new gifts and reactivations further.

In terms of number of gifts, the new campaign has a more uniform distribution across grad classes, with a surprising amount of current students giving. More current students give than recent grads.

The work done in this project is mostly exploratory and laying the foundation for further analysis. The original question has not been definitevly answered... yet. I have identified useful areas to explore deeper into, such as reactivations in 2022. Continued work could consist of identifying patterns among reactivated donors, as well as defining target geographical areas of donor bases outside of the Pennsylvania area. The information provided in this document is mostly summarizing the performance of Widener's current development campaign, which I believe is key to eventually discovering actionable insights.
